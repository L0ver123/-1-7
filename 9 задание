# Реализация метода простой итерации для решения СЛАУ
def simple_iteration(A, b, x0, tol=1e-6, max_iter=1000):
    n = len(b)
    x = x0.copy()
    for _ in range(max_iter):
        x_new = x.copy()
        for i in range(n):
            sum_val = sum(A[i][j] * x_new[j] for j in range(n) if i != j)
            x[i] = (b[i] - sum_val) / A[i][i]
        if all(abs(x[i] - x_new[i]) < tol for i in range(n)):
            return x
    return x

def solve_system(A, b, method='jacobi', x0=None):
    if method == 'jacobi':
        return simple_iteration(A, b, x0)
    elif method == 'seidel':
        # Реализация метода Зейделя
        n = len(b)
        x = x0.copy() if x0 else [0] * n
        for _ in range(1000):
            x_new = x.copy()
            for i in range(n):
                sum_val1 = sum(A[i][j] * x_new[j] for j in range(i))
                sum_val2 = sum(A[i][j] * x[j] for j in range(i + 1, n))
                x[i] = (b[i] - sum_val1 - sum_val2) / A[i][i]
            if all(abs(x[i] - x_new[i]) < 1e-6 for i in range(n)):
                return x
        return x

# Коэффициенты системы уравнений
A = [[1, 5, 1], [4, -1, 1], [12, 12, 72]]
b = [22, 46, 168]

# Начальное приближение
x0 = [0, 0, 0]

# Решение системы методом простой итерации
solution_jacobi = solve_system(A, b, method='jacobi', x0=x0)
print("Решение методом простой итерации:", solution_jacobi)

# Решение системы методом Зейделя
solution_seidel = solve_system(A, b, method='seidel', x0=x0)
print("Решение методом Зейделя:", solution_seidel)
